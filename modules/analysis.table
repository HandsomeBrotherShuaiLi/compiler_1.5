步骤	当前栈	输入串	动作	状态栈	ACTION	GOTO	
1	# function	int ID ( int ID ......	shift	I0 I11	s11		
2	# function int	ID ( int ID , ......	shift	I0 I11 I8	s8		
3	# function type_specifier	ID ( int ID , ......	reduce(type_specifier->int ,['#'])	I0 I11 I17	r39	I17	
4	# function type_specifier ID	( int ID , int ......	shift	I0 I11 I17 I41	s41		
5	# function type_specifier ID (	int ID , int ID ......	shift	I0 I11 I17 I41 I79	s79		
6	...... function type_specifier ID ( int	ID , int ID ) ......	shift	I0 I11 I17 I41 I79 I8	s8		
7	...... function type_specifier ID ( type_specifier	ID , int ID ) ......	reduce(type_specifier->int ,['#'])	I0 I11 I17 I41 I79 I119	r39	I119	
8	...... type_specifier ID ( type_specifier ID	, int ID ) { ......	shift	I0 I11 I17 I41 I79 I119 I138	s138		
9	...... function type_specifier ID ( function_declaration	, int ID ) { ......	reduce(function_declaration->type_specifier ID ,['#'])	I0 I11 I17 I41 I79 I120	r47	I120	
10	...... type_specifier ID ( function_declaration ,	int ID ) { if ......	shift	I0 I11 I17 I41 I79 I120 I139	s139		
11	...... ID ( function_declaration , int	ID ) { if ( ......	shift	I0 I11 I17 I41 I79 I120 I139 I8	s8		
12	...... ID ( function_declaration , type_specifier	ID ) { if ( ......	reduce(type_specifier->int ,['#'])	I0 I11 I17 I41 I79 I120 I139 I119	r39	I119	
13	...... ( function_declaration , type_specifier ID	) { if ( ID ......	shift	I0 I11 I17 I41 I79 I120 I139 I119 I138	s138		
14	...... ID ( function_declaration , function_declaration	) { if ( ID ......	reduce(function_declaration->type_specifier ID ,['#'])	I0 I11 I17 I41 I79 I120 I139 I176	r47	I176	
15	...... ( function_declaration , function_declaration function_declaration_suffix	) { if ( ID ......	reduce(function_declaration_suffix->$ ,['#'])	I0 I11 I17 I41 I79 I120 I139 I176 I200	r49	I200	
16	...... type_specifier ID ( function_declaration function_declaration_suffix	) { if ( ID ......	reduce(function_declaration_suffix->, function_declaration function_declaration_suffix ,['#'])	I0 I11 I17 I41 I79 I120 I140	r48	I140	
17	...... function type_specifier ID ( function_declaration_list	) { if ( ID ......	reduce(function_declaration_list->function_declaration function_declaration_suffix ,['#'])	I0 I11 I17 I41 I79 I121	r50	I121	
18	...... type_specifier ID ( function_declaration_list )	{ if ( ID > ......	shift	I0 I11 I17 I41 I79 I121 I141	s141		
19	# function_definition	{ if ( ID > ......	reduce(function_definition->function type_specifier ID ( function_declaration_list ) ,['#'])	I0 I10	r52	I10	
20	# function_definition {	if ( ID > ID ......	shift	I0 I10 I15	s15		
21	# function_definition { if	( ID > ID ) ......	shift	I0 I10 I15 I23	s23		
22	# function_definition { if (	ID > ID ) return ......	shift	I0 I10 I15 I23 I53	s53		
23	...... function_definition { if ( ID	> ID ) return ID ......	shift	I0 I10 I15 I23 I53 I81	s81		
24	...... function_definition { if ( primary_expression	> ID ) return ID ......	reduce(primary_expression->ID ,['#'])	I0 I10 I15 I23 I53 I87	r4	I87	
25	...... { if ( primary_expression >	ID ) return ID ; ......	shift	I0 I10 I15 I23 I53 I87 I90	s90		
26	...... { if ( primary_expression operator	ID ) return ID ; ......	reduce(operator->> ,['#'])	I0 I10 I15 I23 I53 I87 I127	r13	I127	
27	...... if ( primary_expression operator ID	) return ID ; else ......	shift	I0 I10 I15 I23 I53 I87 I127 I81	s81		
28	...... if ( primary_expression operator primary_expression	) return ID ; else ......	reduce(primary_expression->ID ,['#'])	I0 I10 I15 I23 I53 I87 I127 I153	r4	I153	
29	...... ( primary_expression operator primary_expression arithmetic_expression	) return ID ; else ......	reduce(arithmetic_expression->$ ,['#'])	I0 I10 I15 I23 I53 I87 I127 I153 I185	r17	I185	
30	...... { if ( primary_expression arithmetic_expression	) return ID ; else ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I10 I15 I23 I53 I87 I126	r16	I126	
31	...... function_definition { if ( constant_expression	) return ID ; else ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I10 I15 I23 I53 I82	r18	I82	
32	...... function_definition { if ( expression	) return ID ; else ......	reduce(expression->constant_expression ,['#'])	I0 I10 I15 I23 I53 I102	r31	I102	
33	...... { if ( expression )	return ID ; else return ......	shift	I0 I10 I15 I23 I53 I102 I130	s130		
34	...... if ( expression ) return	ID ; else return ID ......	shift	I0 I10 I15 I23 I53 I102 I130 I170	s170		
35	...... ( expression ) return ID	; else return ID ; ......	shift	I0 I10 I15 I23 I53 I102 I130 I170 I70	s70		
36	...... ( expression ) return primary_expression	; else return ID ; ......	reduce(primary_expression->ID ,['#'])	I0 I10 I15 I23 I53 I102 I130 I170 I76	r4	I76	
37	...... expression ) return primary_expression arithmetic_expression	; else return ID ; ......	reduce(arithmetic_expression->$ ,['#'])	I0 I10 I15 I23 I53 I102 I130 I170 I76 I117	r17	I117	
38	...... ( expression ) return constant_expression	; else return ID ; ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I10 I15 I23 I53 I102 I130 I170 I71	r18	I71	
39	...... ( expression ) return expression	; else return ID ; ......	reduce(expression->constant_expression ,['#'])	I0 I10 I15 I23 I53 I102 I130 I170 I195	r31	I195	
40	...... expression ) return expression ;	else return ID ; } ......	shift	I0 I10 I15 I23 I53 I102 I130 I170 I195 I212	s212		
41	...... if ( expression ) jump_statement	else return ID ; } ......	reduce(jump_statement->return expression ; ,['#'])	I0 I10 I15 I23 I53 I102 I130 I169	r65	I169	
42	...... if ( expression ) statement	else return ID ; } ......	reduce(statement->jump_statement ,['#'])	I0 I10 I15 I23 I53 I102 I130 I166	r55	I166	
43	...... ( expression ) statement else	return ID ; } function ......	shift	I0 I10 I15 I23 I53 I102 I130 I166 I193	s193		
44	...... expression ) statement else return	ID ; } function int ......	shift	I0 I10 I15 I23 I53 I102 I130 I166 I193 I39	s39		
45	...... ) statement else return ID	; } function int ID ......	shift	I0 I10 I15 I23 I53 I102 I130 I166 I193 I39 I70	s70		
46	...... ) statement else return primary_expression	; } function int ID ......	reduce(primary_expression->ID ,['#'])	I0 I10 I15 I23 I53 I102 I130 I166 I193 I39 I76	r4	I76	
47	...... statement else return primary_expression arithmetic_expression	; } function int ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I10 I15 I23 I53 I102 I130 I166 I193 I39 I76 I117	r17	I117	
48	...... ) statement else return constant_expression	; } function int ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I10 I15 I23 I53 I102 I130 I166 I193 I39 I71	r18	I71	
49	...... ) statement else return expression	; } function int ID ......	reduce(expression->constant_expression ,['#'])	I0 I10 I15 I23 I53 I102 I130 I166 I193 I39 I72	r31	I72	
50	...... statement else return expression ;	} function int ID ( ......	shift	I0 I10 I15 I23 I53 I102 I130 I166 I193 I39 I72 I114	s114		
51	...... expression ) statement else jump_statement	} function int ID ( ......	reduce(jump_statement->return expression ; ,['#'])	I0 I10 I15 I23 I53 I102 I130 I166 I193 I37	r65	I37	
52	...... expression ) statement else statement	} function int ID ( ......	reduce(statement->jump_statement ,['#'])	I0 I10 I15 I23 I53 I102 I130 I166 I193 I210	r55	I210	
53	# function_definition { selection_statement	} function int ID ( ......	reduce(selection_statement->if ( expression ) statement else statement ,['#'])	I0 I10 I15 I36	r66	I36	
54	# function_definition { statement	} function int ID ( ......	reduce(statement->selection_statement ,['#'])	I0 I10 I15 I40	r56	I40	
55	# function_definition { statement statement_list	} function int ID ( ......	reduce(statement_list->$ ,['#'])	I0 I10 I15 I40 I78	r61	I78	
56	# function_definition { statement_list	} function int ID ( ......	reduce(statement_list->statement statement_list ,['#'])	I0 I10 I15 I35	r60	I35	
57	# function_definition { statement_list }	function int ID ( int ......	shift	I0 I10 I15 I35 I67	s67		
58	# function_definition compound_statement	function int ID ( int ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I10 I16	r69	I16	
59	# function_implement	function int ID ( int ......	reduce(function_implement->function_definition compound_statement ,['#'])	I0 I3	r53	I3	
60	# external_declaration	function int ID ( int ......	reduce(external_declaration->function_implement ,['#'])	I0 I2	r70	I2	
61	# external_declaration function	int ID ( int ID ......	shift	I0 I2 I11	s11		
62	# external_declaration function int	ID ( int ID , ......	shift	I0 I2 I11 I8	s8		
63	# external_declaration function type_specifier	ID ( int ID , ......	reduce(type_specifier->int ,['#'])	I0 I2 I11 I17	r39	I17	
64	# external_declaration function type_specifier ID	( int ID , int ......	shift	I0 I2 I11 I17 I41	s41		
65	...... external_declaration function type_specifier ID (	int ID , int ID ......	shift	I0 I2 I11 I17 I41 I79	s79		
66	...... function type_specifier ID ( int	ID , int ID ) ......	shift	I0 I2 I11 I17 I41 I79 I8	s8		
67	...... function type_specifier ID ( type_specifier	ID , int ID ) ......	reduce(type_specifier->int ,['#'])	I0 I2 I11 I17 I41 I79 I119	r39	I119	
68	...... type_specifier ID ( type_specifier ID	, int ID ) { ......	shift	I0 I2 I11 I17 I41 I79 I119 I138	s138		
69	...... function type_specifier ID ( function_declaration	, int ID ) { ......	reduce(function_declaration->type_specifier ID ,['#'])	I0 I2 I11 I17 I41 I79 I120	r47	I120	
70	...... type_specifier ID ( function_declaration ,	int ID ) { if ......	shift	I0 I2 I11 I17 I41 I79 I120 I139	s139		
71	...... ID ( function_declaration , int	ID ) { if ( ......	shift	I0 I2 I11 I17 I41 I79 I120 I139 I8	s8		
72	...... ID ( function_declaration , type_specifier	ID ) { if ( ......	reduce(type_specifier->int ,['#'])	I0 I2 I11 I17 I41 I79 I120 I139 I119	r39	I119	
73	...... ( function_declaration , type_specifier ID	) { if ( ID ......	shift	I0 I2 I11 I17 I41 I79 I120 I139 I119 I138	s138		
74	...... ID ( function_declaration , function_declaration	) { if ( ID ......	reduce(function_declaration->type_specifier ID ,['#'])	I0 I2 I11 I17 I41 I79 I120 I139 I176	r47	I176	
75	...... ( function_declaration , function_declaration function_declaration_suffix	) { if ( ID ......	reduce(function_declaration_suffix->$ ,['#'])	I0 I2 I11 I17 I41 I79 I120 I139 I176 I200	r49	I200	
76	...... type_specifier ID ( function_declaration function_declaration_suffix	) { if ( ID ......	reduce(function_declaration_suffix->, function_declaration function_declaration_suffix ,['#'])	I0 I2 I11 I17 I41 I79 I120 I140	r48	I140	
77	...... function type_specifier ID ( function_declaration_list	) { if ( ID ......	reduce(function_declaration_list->function_declaration function_declaration_suffix ,['#'])	I0 I2 I11 I17 I41 I79 I121	r50	I121	
78	...... type_specifier ID ( function_declaration_list )	{ if ( ID < ......	shift	I0 I2 I11 I17 I41 I79 I121 I141	s141		
79	# external_declaration function_definition	{ if ( ID < ......	reduce(function_definition->function type_specifier ID ( function_declaration_list ) ,['#'])	I0 I2 I10	r52	I10	
80	# external_declaration function_definition {	if ( ID < ID ......	shift	I0 I2 I10 I15	s15		
81	# external_declaration function_definition { if	( ID < ID ) ......	shift	I0 I2 I10 I15 I23	s23		
82	...... external_declaration function_definition { if (	ID < ID ) return ......	shift	I0 I2 I10 I15 I23 I53	s53		
83	...... function_definition { if ( ID	< ID ) return ID ......	shift	I0 I2 I10 I15 I23 I53 I81	s81		
84	...... function_definition { if ( primary_expression	< ID ) return ID ......	reduce(primary_expression->ID ,['#'])	I0 I2 I10 I15 I23 I53 I87	r4	I87	
85	...... { if ( primary_expression <	ID ) return ID ; ......	shift	I0 I2 I10 I15 I23 I53 I87 I98	s98		
86	...... { if ( primary_expression operator	ID ) return ID ; ......	reduce(operator->< ,['#'])	I0 I2 I10 I15 I23 I53 I87 I127	r12	I127	
87	...... if ( primary_expression operator ID	) return ID ; else ......	shift	I0 I2 I10 I15 I23 I53 I87 I127 I81	s81		
88	...... if ( primary_expression operator primary_expression	) return ID ; else ......	reduce(primary_expression->ID ,['#'])	I0 I2 I10 I15 I23 I53 I87 I127 I153	r4	I153	
89	...... ( primary_expression operator primary_expression arithmetic_expression	) return ID ; else ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I10 I15 I23 I53 I87 I127 I153 I185	r17	I185	
90	...... { if ( primary_expression arithmetic_expression	) return ID ; else ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I10 I15 I23 I53 I87 I126	r16	I126	
91	...... function_definition { if ( constant_expression	) return ID ; else ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I10 I15 I23 I53 I82	r18	I82	
92	...... function_definition { if ( expression	) return ID ; else ......	reduce(expression->constant_expression ,['#'])	I0 I2 I10 I15 I23 I53 I102	r31	I102	
93	...... { if ( expression )	return ID ; else return ......	shift	I0 I2 I10 I15 I23 I53 I102 I130	s130		
94	...... if ( expression ) return	ID ; else return ID ......	shift	I0 I2 I10 I15 I23 I53 I102 I130 I170	s170		
95	...... ( expression ) return ID	; else return ID ; ......	shift	I0 I2 I10 I15 I23 I53 I102 I130 I170 I70	s70		
96	...... ( expression ) return primary_expression	; else return ID ; ......	reduce(primary_expression->ID ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I170 I76	r4	I76	
97	...... expression ) return primary_expression arithmetic_expression	; else return ID ; ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I170 I76 I117	r17	I117	
98	...... ( expression ) return constant_expression	; else return ID ; ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I170 I71	r18	I71	
99	...... ( expression ) return expression	; else return ID ; ......	reduce(expression->constant_expression ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I170 I195	r31	I195	
100	...... expression ) return expression ;	else return ID ; } ......	shift	I0 I2 I10 I15 I23 I53 I102 I130 I170 I195 I212	s212		
101	...... if ( expression ) jump_statement	else return ID ; } ......	reduce(jump_statement->return expression ; ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I169	r65	I169	
102	...... if ( expression ) statement	else return ID ; } ......	reduce(statement->jump_statement ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I166	r55	I166	
103	...... ( expression ) statement else	return ID ; } function ......	shift	I0 I2 I10 I15 I23 I53 I102 I130 I166 I193	s193		
104	...... expression ) statement else return	ID ; } function int ......	shift	I0 I2 I10 I15 I23 I53 I102 I130 I166 I193 I39	s39		
105	...... ) statement else return ID	; } function int ID ......	shift	I0 I2 I10 I15 I23 I53 I102 I130 I166 I193 I39 I70	s70		
106	...... ) statement else return primary_expression	; } function int ID ......	reduce(primary_expression->ID ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I166 I193 I39 I76	r4	I76	
107	...... statement else return primary_expression arithmetic_expression	; } function int ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I166 I193 I39 I76 I117	r17	I117	
108	...... ) statement else return constant_expression	; } function int ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I166 I193 I39 I71	r18	I71	
109	...... ) statement else return expression	; } function int ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I166 I193 I39 I72	r31	I72	
110	...... statement else return expression ;	} function int ID ( ......	shift	I0 I2 I10 I15 I23 I53 I102 I130 I166 I193 I39 I72 I114	s114		
111	...... expression ) statement else jump_statement	} function int ID ( ......	reduce(jump_statement->return expression ; ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I166 I193 I37	r65	I37	
112	...... expression ) statement else statement	} function int ID ( ......	reduce(statement->jump_statement ,['#'])	I0 I2 I10 I15 I23 I53 I102 I130 I166 I193 I210	r55	I210	
113	# external_declaration function_definition { selection_statement	} function int ID ( ......	reduce(selection_statement->if ( expression ) statement else statement ,['#'])	I0 I2 I10 I15 I36	r66	I36	
114	# external_declaration function_definition { statement	} function int ID ( ......	reduce(statement->selection_statement ,['#'])	I0 I2 I10 I15 I40	r56	I40	
115	...... external_declaration function_definition { statement statement_list	} function int ID ( ......	reduce(statement_list->$ ,['#'])	I0 I2 I10 I15 I40 I78	r61	I78	
116	# external_declaration function_definition { statement_list	} function int ID ( ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I10 I15 I35	r60	I35	
117	...... external_declaration function_definition { statement_list }	function int ID ( int ......	shift	I0 I2 I10 I15 I35 I67	s67		
118	# external_declaration function_definition compound_statement	function int ID ( int ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I10 I16	r69	I16	
119	# external_declaration function_implement	function int ID ( int ......	reduce(function_implement->function_definition compound_statement ,['#'])	I0 I2 I3	r53	I3	
120	# external_declaration external_declaration	function int ID ( int ......	reduce(external_declaration->function_implement ,['#'])	I0 I2 I2	r70	I2	
121	# external_declaration external_declaration function	int ID ( int ID ......	shift	I0 I2 I2 I11	s11		
122	# external_declaration external_declaration function int	ID ( int ID ) ......	shift	I0 I2 I2 I11 I8	s8		
123	# external_declaration external_declaration function type_specifier	ID ( int ID ) ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I11 I17	r39	I17	
124	...... external_declaration external_declaration function type_specifier ID	( int ID ) { ......	shift	I0 I2 I2 I11 I17 I41	s41		
125	...... external_declaration function type_specifier ID (	int ID ) { if ......	shift	I0 I2 I2 I11 I17 I41 I79	s79		
126	...... function type_specifier ID ( int	ID ) { if ( ......	shift	I0 I2 I2 I11 I17 I41 I79 I8	s8		
127	...... function type_specifier ID ( type_specifier	ID ) { if ( ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I11 I17 I41 I79 I119	r39	I119	
128	...... type_specifier ID ( type_specifier ID	) { if ( ID ......	shift	I0 I2 I2 I11 I17 I41 I79 I119 I138	s138		
129	...... function type_specifier ID ( function_declaration	) { if ( ID ......	reduce(function_declaration->type_specifier ID ,['#'])	I0 I2 I2 I11 I17 I41 I79 I120	r47	I120	
130	...... type_specifier ID ( function_declaration function_declaration_suffix	) { if ( ID ......	reduce(function_declaration_suffix->$ ,['#'])	I0 I2 I2 I11 I17 I41 I79 I120 I140	r49	I140	
131	...... function type_specifier ID ( function_declaration_list	) { if ( ID ......	reduce(function_declaration_list->function_declaration function_declaration_suffix ,['#'])	I0 I2 I2 I11 I17 I41 I79 I121	r50	I121	
132	...... type_specifier ID ( function_declaration_list )	{ if ( ID < ......	shift	I0 I2 I2 I11 I17 I41 I79 I121 I141	s141		
133	# external_declaration external_declaration function_definition	{ if ( ID < ......	reduce(function_definition->function type_specifier ID ( function_declaration_list ) ,['#'])	I0 I2 I2 I10	r52	I10	
134	# external_declaration external_declaration function_definition {	if ( ID < number ......	shift	I0 I2 I2 I10 I15	s15		
135	...... external_declaration external_declaration function_definition { if	( ID < number ) ......	shift	I0 I2 I2 I10 I15 I23	s23		
136	...... external_declaration function_definition { if (	ID < number ) return ......	shift	I0 I2 I2 I10 I15 I23 I53	s53		
137	...... function_definition { if ( ID	< number ) return number ......	shift	I0 I2 I2 I10 I15 I23 I53 I81	s81		
138	...... function_definition { if ( primary_expression	< number ) return number ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I10 I15 I23 I53 I87	r4	I87	
139	...... { if ( primary_expression <	number ) return number ; ......	shift	I0 I2 I2 I10 I15 I23 I53 I87 I98	s98		
140	...... { if ( primary_expression operator	number ) return number ; ......	reduce(operator->< ,['#'])	I0 I2 I2 I10 I15 I23 I53 I87 I127	r12	I127	
141	...... if ( primary_expression operator number	) return number ; else ......	shift	I0 I2 I2 I10 I15 I23 I53 I87 I127 I88	s88		
142	...... if ( primary_expression operator primary_expression	) return number ; else ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I10 I15 I23 I53 I87 I127 I153	r5	I153	
143	...... ( primary_expression operator primary_expression arithmetic_expression	) return number ; else ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I10 I15 I23 I53 I87 I127 I153 I185	r17	I185	
144	...... { if ( primary_expression arithmetic_expression	) return number ; else ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I87 I126	r16	I126	
145	...... function_definition { if ( constant_expression	) return number ; else ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I82	r18	I82	
146	...... function_definition { if ( expression	) return number ; else ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102	r31	I102	
147	...... { if ( expression )	return number ; else { ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130	s130		
148	...... if ( expression ) return	number ; else { int ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I170	s170		
149	...... ( expression ) return number	; else { int ID ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I170 I77	s77		
150	...... ( expression ) return primary_expression	; else { int ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I170 I76	r5	I76	
151	...... expression ) return primary_expression arithmetic_expression	; else { int ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I170 I76 I117	r17	I117	
152	...... ( expression ) return constant_expression	; else { int ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I170 I71	r18	I71	
153	...... ( expression ) return expression	; else { int ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I170 I195	r31	I195	
154	...... expression ) return expression ;	else { int ID = ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I170 I195 I212	s212		
155	...... if ( expression ) jump_statement	else { int ID = ......	reduce(jump_statement->return expression ; ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I169	r65	I169	
156	...... if ( expression ) statement	else { int ID = ......	reduce(statement->jump_statement ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166	r55	I166	
157	...... ( expression ) statement else	{ int ID = function ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193	s193		
158	...... expression ) statement else {	int ID = function ID ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28	s28		
159	...... ) statement else { int	ID = function ID ( ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I8	s8		
160	...... ) statement else { type_specifier	ID = function ID ( ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22	r39	I22	
161	...... statement else { type_specifier ID	= function ID ( ID ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13	s13		
162	...... else { type_specifier ID =	function ID ( ID - ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18	s18		
163	...... { type_specifier ID = function	ID ( ID - number ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45	s45		
164	...... type_specifier ID = function ID	( ID - number ) ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80	s80		
165	...... ID = function ID (	ID - number ) ; ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122	s122		
166	...... = function ID ( ID	- number ) ; int ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I142	s142		
167	...... = function ID ( primary_expression	- number ) ; int ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I148	r4	I148	
168	...... function ID ( primary_expression -	number ) ; int ID ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I148 I91	s91		
169	...... function ID ( primary_expression operator	number ) ; int ID ......	reduce(operator->- ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I148 I181	r8	I181	
170	...... ID ( primary_expression operator number	) ; int ID = ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I148 I181 I149	s149		
171	...... ID ( primary_expression operator primary_expression	) ; int ID = ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I148 I181 I203	r5	I203	
172	...... ( primary_expression operator primary_expression arithmetic_expression	) ; int ID = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I148 I181 I203 I216	r17	I216	
173	...... function ID ( primary_expression arithmetic_expression	) ; int ID = ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I148 I180	r16	I180	
174	...... = function ID ( constant_expression	) ; int ID = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I143	r18	I143	
175	...... = function ID ( expression	) ; int ID = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I150	r31	I150	
176	...... function ID ( expression expression_profix	) ; int ID = ......	reduce(expression_profix->$ ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I150 I182	r34	I182	
177	...... = function ID ( expression_list	) ; int ID = ......	reduce(expression_list->expression expression_profix ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I145	r35	I145	
178	...... function ID ( expression_list )	; int ID = ID ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I45 I80 I122 I145 I178	s178		
179	...... { type_specifier ID = function_expression	; int ID = ID ......	reduce(function_expression->function ID ( expression_list ) ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I44	r30	I44	
180	...... { type_specifier ID = expression	; int ID = ID ......	reduce(expression->function_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I18 I48	r32	I48	
181	...... else { type_specifier ID declaration_assign	; int ID = ID ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I13 I19	r41	I19	
182	...... statement else { type_specifier declaration_init	; int ID = ID ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I52	r43	I52	
183	...... else { type_specifier declaration_init declaration_init_list	; int ID = ID ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I52 I101	r45	I101	
184	...... { type_specifier declaration_init declaration_init_list ;	int ID = ID * ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I22 I52 I101 I129	s129		
185	...... ) statement else { declaration	int ID = ID * ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I32	r46	I32	
186	...... ) statement else { statement	int ID = ID * ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40	r59	I40	
187	...... statement else { statement int	ID = ID * ID ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I8	s8		
188	...... statement else { statement type_specifier	ID = ID * ID ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22	r39	I22	
189	...... else { statement type_specifier ID	= ID * ID ; ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13	s13		
190	...... { statement type_specifier ID =	ID * ID ; return ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I18	s18		
191	...... statement type_specifier ID = ID	* ID ; return ID ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I18 I42	s42		
192	...... statement type_specifier ID = primary_expression	* ID ; return ID ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I18 I47	r4	I47	
193	...... type_specifier ID = primary_expression *	ID ; return ID ; ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I18 I47 I99	s99		
194	...... type_specifier ID = primary_expression operator	ID ; return ID ; ......	reduce(operator->* ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I18 I47 I96	r9	I96	
195	...... ID = primary_expression operator ID	; return ID ; } ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I18 I47 I96 I42	s42		
196	...... ID = primary_expression operator primary_expression	; return ID ; } ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I18 I47 I96 I128	r4	I128	
197	...... = primary_expression operator primary_expression arithmetic_expression	; return ID ; } ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I18 I47 I96 I128 I154	r17	I154	
198	...... type_specifier ID = primary_expression arithmetic_expression	; return ID ; } ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I18 I47 I89	r16	I89	
199	...... statement type_specifier ID = constant_expression	; return ID ; } ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I18 I43	r18	I43	
200	...... statement type_specifier ID = expression	; return ID ; } ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I18 I48	r31	I48	
201	...... { statement type_specifier ID declaration_assign	; return ID ; } ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I13 I19	r41	I19	
202	...... else { statement type_specifier declaration_init	; return ID ; } ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I52	r43	I52	
203	...... { statement type_specifier declaration_init declaration_init_list	; return ID ; } ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I52 I101	r45	I101	
204	...... statement type_specifier declaration_init declaration_init_list ;	return ID ; } } ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I22 I52 I101 I129	s129		
205	...... statement else { statement declaration	return ID ; } } ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I32	r46	I32	
206	...... statement else { statement statement	return ID ; } } ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40	r59	I40	
207	...... else { statement statement return	ID ; } } function ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40 I39	s39		
208	...... { statement statement return ID	; } } function int ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40 I39 I70	s70		
209	...... { statement statement return primary_expression	; } } function int ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40 I39 I76	r4	I76	
210	...... statement statement return primary_expression arithmetic_expression	; } } function int ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40 I39 I76 I117	r17	I117	
211	...... { statement statement return constant_expression	; } } function int ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40 I39 I71	r18	I71	
212	...... { statement statement return expression	; } } function int ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40 I39 I72	r31	I72	
213	...... statement statement return expression ;	} } function int ID ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40 I39 I72 I114	s114		
214	...... else { statement statement jump_statement	} } function int ID ......	reduce(jump_statement->return expression ; ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40 I37	r65	I37	
215	...... else { statement statement statement	} } function int ID ......	reduce(statement->jump_statement ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40 I40	r55	I40	
216	...... { statement statement statement statement_list	} } function int ID ......	reduce(statement_list->$ ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40 I40 I78	r61	I78	
217	...... else { statement statement statement_list	} } function int ID ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I40 I78	r60	I78	
218	...... statement else { statement statement_list	} } function int ID ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I40 I78	r60	I78	
219	...... ) statement else { statement_list	} } function int ID ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I56	r60	I56	
220	...... statement else { statement_list }	} function int ID ( ......	shift	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I28 I56 I103	s103		
221	...... expression ) statement else compound_statement	} function int ID ( ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I31	r69	I31	
222	...... expression ) statement else statement	} function int ID ( ......	reduce(statement->compound_statement ,['#'])	I0 I2 I2 I10 I15 I23 I53 I102 I130 I166 I193 I210	r58	I210	
223	...... external_declaration external_declaration function_definition { selection_statement	} function int ID ( ......	reduce(selection_statement->if ( expression ) statement else statement ,['#'])	I0 I2 I2 I10 I15 I36	r66	I36	
224	...... external_declaration external_declaration function_definition { statement	} function int ID ( ......	reduce(statement->selection_statement ,['#'])	I0 I2 I2 I10 I15 I40	r56	I40	
225	...... external_declaration function_definition { statement statement_list	} function int ID ( ......	reduce(statement_list->$ ,['#'])	I0 I2 I2 I10 I15 I40 I78	r61	I78	
226	...... external_declaration external_declaration function_definition { statement_list	} function int ID ( ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I10 I15 I35	r60	I35	
227	...... external_declaration function_definition { statement_list }	function int ID ( ) ......	shift	I0 I2 I2 I10 I15 I35 I67	s67		
228	# external_declaration external_declaration function_definition compound_statement	function int ID ( ) ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I2 I10 I16	r69	I16	
229	# external_declaration external_declaration function_implement	function int ID ( ) ......	reduce(function_implement->function_definition compound_statement ,['#'])	I0 I2 I2 I3	r53	I3	
230	# external_declaration external_declaration external_declaration	function int ID ( ) ......	reduce(external_declaration->function_implement ,['#'])	I0 I2 I2 I2	r70	I2	
231	# external_declaration external_declaration external_declaration function	int ID ( ) { ......	shift	I0 I2 I2 I2 I11	s11		
232	...... external_declaration external_declaration external_declaration function int	ID ( ) { int ......	shift	I0 I2 I2 I2 I11 I8	s8		
233	...... external_declaration external_declaration external_declaration function type_specifier	ID ( ) { int ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I11 I17	r39	I17	
234	...... external_declaration external_declaration function type_specifier ID	( ) { int ID ......	shift	I0 I2 I2 I2 I11 I17 I41	s41		
235	...... external_declaration function type_specifier ID (	) { int ID , ......	shift	I0 I2 I2 I2 I11 I17 I41 I79	s79		
236	...... function type_specifier ID ( function_declaration_list	) { int ID , ......	reduce(function_declaration_list->$ ,['#'])	I0 I2 I2 I2 I11 I17 I41 I79 I121	r51	I121	
237	...... type_specifier ID ( function_declaration_list )	{ int ID , ID ......	shift	I0 I2 I2 I2 I11 I17 I41 I79 I121 I141	s141		
238	# external_declaration external_declaration external_declaration function_definition	{ int ID , ID ......	reduce(function_definition->function type_specifier ID ( function_declaration_list ) ,['#'])	I0 I2 I2 I2 I10	r52	I10	
239	...... external_declaration external_declaration external_declaration function_definition {	int ID , ID ; ......	shift	I0 I2 I2 I2 I10 I15	s15		
240	...... external_declaration external_declaration function_definition { int	ID , ID ; ID ......	shift	I0 I2 I2 I2 I10 I15 I8	s8		
241	...... external_declaration external_declaration function_definition { type_specifier	ID , ID ; ID ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I15 I22	r39	I22	
242	...... external_declaration function_definition { type_specifier ID	, ID ; ID = ......	shift	I0 I2 I2 I2 I10 I15 I22 I13	s13		
243	...... function_definition { type_specifier ID declaration_assign	, ID ; ID = ......	reduce(declaration_assign->$ ,['#'])	I0 I2 I2 I2 I10 I15 I22 I13 I19	r42	I19	
244	...... external_declaration function_definition { type_specifier declaration_init	, ID ; ID = ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I15 I22 I52	r43	I52	
245	...... function_definition { type_specifier declaration_init ,	ID ; ID = function ......	shift	I0 I2 I2 I2 I10 I15 I22 I52 I21	s21		
246	...... { type_specifier declaration_init , ID	; ID = function ID ......	shift	I0 I2 I2 I2 I10 I15 I22 I52 I21 I13	s13		
247	...... type_specifier declaration_init , ID declaration_assign	; ID = function ID ......	reduce(declaration_assign->$ ,['#'])	I0 I2 I2 I2 I10 I15 I22 I52 I21 I13 I19	r42	I19	
248	...... { type_specifier declaration_init , declaration_init	; ID = function ID ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I15 I22 I52 I21 I51	r43	I51	
249	...... type_specifier declaration_init , declaration_init declaration_init_list	; ID = function ID ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I15 I22 I52 I21 I51 I100	r45	I100	
250	...... function_definition { type_specifier declaration_init declaration_init_list	; ID = function ID ......	reduce(declaration_init_list->, declaration_init declaration_init_list ,['#'])	I0 I2 I2 I2 I10 I15 I22 I52 I101	r44	I101	
251	...... { type_specifier declaration_init declaration_init_list ;	ID = function ID ( ......	shift	I0 I2 I2 I2 I10 I15 I22 I52 I101 I129	s129		
252	...... external_declaration external_declaration function_definition { declaration	ID = function ID ( ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I15 I32	r46	I32	
253	...... external_declaration external_declaration function_definition { statement	ID = function ID ( ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I15 I40	r59	I40	
254	...... external_declaration function_definition { statement ID	= function ID ( number ......	shift	I0 I2 I2 I2 I10 I15 I40 I34	s34		
255	...... function_definition { statement ID =	function ID ( number ) ......	shift	I0 I2 I2 I2 I10 I15 I40 I34 I66	s66		
256	...... function_definition { statement ID assignment_operator	function ID ( number ) ......	reduce(assignment_operator->= ,['#'])	I0 I2 I2 I2 I10 I15 I40 I34 I63	r19	I63	
257	...... { statement ID assignment_operator function	ID ( number ) ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I34 I63 I45	s45		
258	...... statement ID assignment_operator function ID	( number ) ; int ......	shift	I0 I2 I2 I2 I10 I15 I40 I34 I63 I45 I80	s80		
259	...... ID assignment_operator function ID (	number ) ; int ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I34 I63 I45 I80 I122	s122		
260	...... assignment_operator function ID ( number	) ; int ID = ......	shift	I0 I2 I2 I2 I10 I15 I40 I34 I63 I45 I80 I122 I149	s149		
261	...... assignment_operator function ID ( primary_expression	) ; int ID = ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I34 I63 I45 I80 I122 I148	r5	I148	
262	...... function ID ( primary_expression arithmetic_expression	) ; int ID = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I34 I63 I45 I80 I122 I148 I180	r17	I180	
263	...... assignment_operator function ID ( constant_expression	) ; int ID = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I34 I63 I45 I80 I122 I143	r18	I143	
264	...... assignment_operator function ID ( expression	) ; int ID = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I34 I63 I45 I80 I122 I150	r31	I150	
265	...... function ID ( expression expression_profix	) ; int ID = ......	reduce(expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I34 I63 I45 I80 I122 I150 I182	r34	I182	
266	...... assignment_operator function ID ( expression_list	) ; int ID = ......	reduce(expression_list->expression expression_profix ,['#'])	I0 I2 I2 I2 I10 I15 I40 I34 I63 I45 I80 I122 I145	r35	I145	
267	...... function ID ( expression_list )	; int ID = number ......	shift	I0 I2 I2 I2 I10 I15 I40 I34 I63 I45 I80 I122 I145 I178	s178		
268	...... { statement ID assignment_operator function_expression	; int ID = number ......	reduce(function_expression->function ID ( expression_list ) ,['#'])	I0 I2 I2 I2 I10 I15 I40 I34 I63 I44	r30	I44	
269	...... { statement ID assignment_operator expression	; int ID = number ......	reduce(expression->function_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I34 I63 I110	r32	I110	
270	...... external_declaration function_definition { statement assignment_expression	; int ID = number ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I38	r25	I38	
271	...... function_definition { statement assignment_expression assignment_expression_profix	; int ID = number ......	reduce(assignment_expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I38 I68	r27	I68	
272	...... external_declaration function_definition { statement assignment_expression_list	; int ID = number ......	reduce(assignment_expression_list->assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I15 I40 I26	r28	I26	
273	...... function_definition { statement assignment_expression_list ;	int ID = number , ......	shift	I0 I2 I2 I2 I10 I15 I40 I26 I55	s55		
274	...... external_declaration function_definition { statement expression_statement	int ID = number , ......	reduce(expression_statement->assignment_expression_list ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I24	r62	I24	
275	...... external_declaration function_definition { statement statement	int ID = number , ......	reduce(statement->expression_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40	r54	I40	
276	...... function_definition { statement statement int	ID = number , ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I8	s8		
277	...... function_definition { statement statement type_specifier	ID = number , ID ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22	r39	I22	
278	...... { statement statement type_specifier ID	= number , ID = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I13	s13		
279	...... statement statement type_specifier ID =	number , ID = number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I13 I18	s18		
280	...... statement type_specifier ID = number	, ID = number , ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I13 I18 I49	s49		
281	...... statement type_specifier ID = primary_expression	, ID = number , ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I13 I18 I47	r5	I47	
282	...... type_specifier ID = primary_expression arithmetic_expression	, ID = number , ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I13 I18 I47 I89	r17	I89	
283	...... statement type_specifier ID = constant_expression	, ID = number , ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I13 I18 I43	r18	I43	
284	...... statement type_specifier ID = expression	, ID = number , ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I13 I18 I48	r31	I48	
285	...... statement statement type_specifier ID declaration_assign	, ID = number , ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I13 I19	r41	I19	
286	...... { statement statement type_specifier declaration_init	, ID = number , ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52	r43	I52	
287	...... statement statement type_specifier declaration_init ,	ID = number , ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21	s21		
288	...... statement type_specifier declaration_init , ID	= number , ID = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I13	s13		
289	...... type_specifier declaration_init , ID =	number , ID = number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I13 I18	s18		
290	...... declaration_init , ID = number	, ID = number , ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I13 I18 I49	s49		
291	...... declaration_init , ID = primary_expression	, ID = number , ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I13 I18 I47	r5	I47	
292	...... , ID = primary_expression arithmetic_expression	, ID = number , ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I13 I18 I47 I89	r17	I89	
293	...... declaration_init , ID = constant_expression	, ID = number , ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I13 I18 I43	r18	I43	
294	...... declaration_init , ID = expression	, ID = number , ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I13 I18 I48	r31	I48	
295	...... type_specifier declaration_init , ID declaration_assign	, ID = number , ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I13 I19	r41	I19	
296	...... statement type_specifier declaration_init , declaration_init	, ID = number , ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51	r43	I51	
297	...... type_specifier declaration_init , declaration_init ,	ID = number , ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21	s21		
298	...... declaration_init , declaration_init , ID	= number , ID = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I13	s13		
299	...... , declaration_init , ID =	number , ID = number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I13 I18	s18		
300	...... declaration_init , ID = number	, ID = number * ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I13 I18 I49	s49		
301	...... declaration_init , ID = primary_expression	, ID = number * ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I13 I18 I47	r5	I47	
302	...... , ID = primary_expression arithmetic_expression	, ID = number * ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I13 I18 I47 I89	r17	I89	
303	...... declaration_init , ID = constant_expression	, ID = number * ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I13 I18 I43	r18	I43	
304	...... declaration_init , ID = expression	, ID = number * ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I13 I18 I48	r31	I48	
305	...... , declaration_init , ID declaration_assign	, ID = number * ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I13 I19	r41	I19	
306	...... declaration_init , declaration_init , declaration_init	, ID = number * ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51	r43	I51	
307	...... , declaration_init , declaration_init ,	ID = number * number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21	s21		
308	...... declaration_init , declaration_init , ID	= number * number + ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13	s13		
309	...... , declaration_init , ID =	number * number + number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18	s18		
310	...... declaration_init , ID = number	* number + number - ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I49	s49		
311	...... declaration_init , ID = primary_expression	* number + number - ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47	r5	I47	
312	...... , ID = primary_expression *	number + number - number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I99	s99		
313	...... , ID = primary_expression operator	number + number - number ......	reduce(operator->* ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96	r9	I96	
314	...... ID = primary_expression operator number	+ number - number ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I49	s49		
315	...... ID = primary_expression operator primary_expression	+ number - number ; ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128	r5	I128	
316	...... = primary_expression operator primary_expression +	number - number ; int ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128 I93	s93		
317	...... = primary_expression operator primary_expression operator	number - number ; int ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128 I96	r7	I96	
318	...... primary_expression operator primary_expression operator number	- number ; int ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128 I96 I49	s49		
319	...... primary_expression operator primary_expression operator primary_expression	- number ; int ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128 I96 I128	r5	I128	
320	...... operator primary_expression operator primary_expression -	number ; int ID = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128 I96 I128 I91	s91		
321	...... operator primary_expression operator primary_expression operator	number ; int ID = ......	reduce(operator->- ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128 I96 I128 I96	r8	I96	
322	...... primary_expression operator primary_expression operator number	; int ID = number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128 I96 I128 I96 I49	s49		
323	...... primary_expression operator primary_expression operator primary_expression	; int ID = number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128 I96 I128 I96 I128	r5	I128	
324	...... operator primary_expression operator primary_expression arithmetic_expression	; int ID = number ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128 I96 I128 I96 I128 I154	r17	I154	
325	...... operator primary_expression operator primary_expression arithmetic_expression	; int ID = number ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128 I96 I128 I154	r16	I154	
326	...... = primary_expression operator primary_expression arithmetic_expression	; int ID = number ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I96 I128 I154	r16	I154	
327	...... , ID = primary_expression arithmetic_expression	; int ID = number ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I47 I89	r16	I89	
328	...... declaration_init , ID = constant_expression	; int ID = number ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I43	r18	I43	
329	...... declaration_init , ID = expression	; int ID = number ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I18 I48	r31	I48	
330	...... , declaration_init , ID declaration_assign	; int ID = number ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I13 I19	r41	I19	
331	...... declaration_init , declaration_init , declaration_init	; int ID = number ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I51	r43	I51	
332	...... , declaration_init , declaration_init declaration_init_list	; int ID = number ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I21 I51 I100	r45	I100	
333	...... , declaration_init , declaration_init declaration_init_list	; int ID = number ......	reduce(declaration_init_list->, declaration_init declaration_init_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I21 I51 I100	r44	I100	
334	...... type_specifier declaration_init , declaration_init declaration_init_list	; int ID = number ......	reduce(declaration_init_list->, declaration_init declaration_init_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I21 I51 I100	r44	I100	
335	...... statement statement type_specifier declaration_init declaration_init_list	; int ID = number ......	reduce(declaration_init_list->, declaration_init declaration_init_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I101	r44	I101	
336	...... statement type_specifier declaration_init declaration_init_list ;	int ID = number ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I22 I52 I101 I129	s129		
337	...... function_definition { statement statement declaration	int ID = number ; ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I32	r46	I32	
338	...... function_definition { statement statement statement	int ID = number ; ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40	r59	I40	
339	...... { statement statement statement int	ID = number ; for ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I8	s8		
340	...... { statement statement statement type_specifier	ID = number ; for ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22	r39	I22	
341	...... statement statement statement type_specifier ID	= number ; for ( ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22 I13	s13		
342	...... statement statement type_specifier ID =	number ; for ( int ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22 I13 I18	s18		
343	...... statement type_specifier ID = number	; for ( int ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22 I13 I18 I49	s49		
344	...... statement type_specifier ID = primary_expression	; for ( int ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22 I13 I18 I47	r5	I47	
345	...... type_specifier ID = primary_expression arithmetic_expression	; for ( int ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22 I13 I18 I47 I89	r17	I89	
346	...... statement type_specifier ID = constant_expression	; for ( int ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22 I13 I18 I43	r18	I43	
347	...... statement type_specifier ID = expression	; for ( int ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22 I13 I18 I48	r31	I48	
348	...... statement statement type_specifier ID declaration_assign	; for ( int ID ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22 I13 I19	r41	I19	
349	...... statement statement statement type_specifier declaration_init	; for ( int ID ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22 I52	r43	I52	
350	...... statement statement type_specifier declaration_init declaration_init_list	; for ( int ID ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22 I52 I101	r45	I101	
351	...... statement type_specifier declaration_init declaration_init_list ;	for ( int ID = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I22 I52 I101 I129	s129		
352	...... { statement statement statement declaration	for ( int ID = ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I32	r46	I32	
353	...... { statement statement statement statement	for ( int ID = ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40	r59	I40	
354	...... statement statement statement statement for	( int ID = number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33	s33		
355	...... statement statement statement for (	int ID = number ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59	s59		
356	...... statement statement for ( int	ID = number ; ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I8	s8		
357	...... statement statement for ( type_specifier	ID = number ; ID ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105	r39	I105	
358	...... statement for ( type_specifier ID	= number ; ID < ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105 I13	s13		
359	...... for ( type_specifier ID =	number ; ID < number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105 I13 I18	s18		
360	...... ( type_specifier ID = number	; ID < number ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105 I13 I18 I49	s49		
361	...... ( type_specifier ID = primary_expression	; ID < number ; ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105 I13 I18 I47	r5	I47	
362	...... type_specifier ID = primary_expression arithmetic_expression	; ID < number ; ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105 I13 I18 I47 I89	r17	I89	
363	...... ( type_specifier ID = constant_expression	; ID < number ; ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105 I13 I18 I43	r18	I43	
364	...... ( type_specifier ID = expression	; ID < number ; ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105 I13 I18 I48	r31	I48	
365	...... for ( type_specifier ID declaration_assign	; ID < number ; ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105 I13 I19	r41	I19	
366	...... statement for ( type_specifier declaration_init	; ID < number ; ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105 I132	r43	I132	
367	...... for ( type_specifier declaration_init declaration_init_list	; ID < number ; ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105 I132 I172	r45	I172	
368	...... ( type_specifier declaration_init declaration_init_list ;	ID < number ; ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I105 I132 I172 I196	s196		
369	...... statement statement for ( declaration	ID < number ; ID ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106	r46	I106	
370	...... statement for ( declaration ID	< number ; ID + ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I70	s70		
371	...... statement for ( declaration primary_expression	< number ; ID + ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I76	r4	I76	
372	...... for ( declaration primary_expression <	number ; ID + = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I76 I98	s98		
373	...... for ( declaration primary_expression operator	number ; ID + = ......	reduce(operator->< ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I76 I118	r12	I118	
374	...... ( declaration primary_expression operator number	; ID + = number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I76 I118 I77	s77		
375	...... ( declaration primary_expression operator primary_expression	; ID + = number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I76 I118 I137	r5	I137	
376	...... declaration primary_expression operator primary_expression arithmetic_expression	; ID + = number ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I76 I118 I137 I175	r17	I175	
377	...... for ( declaration primary_expression arithmetic_expression	; ID + = number ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I76 I117	r16	I117	
378	...... statement for ( declaration constant_expression	; ID + = number ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I71	r18	I71	
379	...... statement for ( declaration expression	; ID + = number ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133	r31	I133	
380	...... for ( declaration expression ;	ID + = number ) ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173	s173		
381	...... ( declaration expression ; ID	+ = number ) { ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I198	s198		
382	...... declaration expression ; ID +	= number ) { if ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I198 I64	s64		
383	...... expression ; ID + =	number ) { if ( ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I198 I64 I111	s111		
384	...... declaration expression ; ID assignment_operator	number ) { if ( ......	reduce(assignment_operator->+ = ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I198 I214	r20	I214	
385	...... expression ; ID assignment_operator number	) { if ( ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I198 I214 I88	s88		
386	...... expression ; ID assignment_operator primary_expression	) { if ( ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I198 I214 I87	r5	I87	
387	...... ; ID assignment_operator primary_expression arithmetic_expression	) { if ( ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I198 I214 I87 I126	r17	I126	
388	...... expression ; ID assignment_operator constant_expression	) { if ( ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I198 I214 I82	r18	I82	
389	...... expression ; ID assignment_operator expression	) { if ( ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I198 I214 I223	r31	I223	
390	...... ( declaration expression ; assignment_expression	) { if ( ID ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197	r25	I197	
391	...... declaration expression ; assignment_expression )	{ if ( ID < ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213	s213		
392	...... expression ; assignment_expression ) {	if ( ID < number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28	s28		
393	...... ; assignment_expression ) { if	( ID < number ) ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23	s23		
394	...... assignment_expression ) { if (	ID < number ) continue ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53	s53		
395	...... ) { if ( ID	< number ) continue ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I81	s81		
396	...... ) { if ( primary_expression	< number ) continue ; ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I87	r4	I87	
397	...... { if ( primary_expression <	number ) continue ; else ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I87 I98	s98		
398	...... { if ( primary_expression operator	number ) continue ; else ......	reduce(operator->< ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I87 I127	r12	I127	
399	...... if ( primary_expression operator number	) continue ; else ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I87 I127 I88	s88		
400	...... if ( primary_expression operator primary_expression	) continue ; else ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I87 I127 I153	r5	I153	
401	...... ( primary_expression operator primary_expression arithmetic_expression	) continue ; else ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I87 I127 I153 I185	r17	I185	
402	...... { if ( primary_expression arithmetic_expression	) continue ; else ID ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I87 I126	r16	I126	
403	...... ) { if ( constant_expression	) continue ; else ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I82	r18	I82	
404	...... ) { if ( expression	) continue ; else ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102	r31	I102	
405	...... { if ( expression )	continue ; else ID + ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130	s130		
406	...... if ( expression ) continue	; else ID + = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I163	s163		
407	...... ( expression ) continue ;	else ID + = ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I163 I192	s192		
408	...... if ( expression ) jump_statement	else ID + = ID ......	reduce(jump_statement->continue ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I169	r63	I169	
409	...... if ( expression ) statement	else ID + = ID ......	reduce(statement->jump_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166	r55	I166	
410	...... ( expression ) statement else	ID + = ID ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193	s193		
411	...... expression ) statement else ID	+ = ID ; if ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I34	s34		
412	...... ) statement else ID +	= ID ; if ( ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I34 I64	s64		
413	...... statement else ID + =	ID ; if ( ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I34 I64 I111	s111		
414	...... ) statement else ID assignment_operator	ID ; if ( ID ......	reduce(assignment_operator->+ = ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I34 I63	r20	I63	
415	...... statement else ID assignment_operator ID	; if ( ID > ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I34 I63 I42	s42		
416	...... statement else ID assignment_operator primary_expression	; if ( ID > ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I34 I63 I47	r4	I47	
417	...... else ID assignment_operator primary_expression arithmetic_expression	; if ( ID > ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I34 I63 I47 I89	r17	I89	
418	...... statement else ID assignment_operator constant_expression	; if ( ID > ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I34 I63 I43	r18	I43	
419	...... statement else ID assignment_operator expression	; if ( ID > ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I34 I63 I110	r31	I110	
420	...... expression ) statement else assignment_expression	; if ( ID > ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I38	r25	I38	
421	...... ) statement else assignment_expression assignment_expression_profix	; if ( ID > ......	reduce(assignment_expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I38 I68	r27	I68	
422	...... expression ) statement else assignment_expression_list	; if ( ID > ......	reduce(assignment_expression_list->assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I26	r28	I26	
423	...... ) statement else assignment_expression_list ;	if ( ID > number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I26 I55	s55		
424	...... expression ) statement else expression_statement	if ( ID > number ......	reduce(expression_statement->assignment_expression_list ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I24	r62	I24	
425	...... expression ) statement else statement	if ( ID > number ......	reduce(statement->expression_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I23 I53 I102 I130 I166 I193 I210	r54	I210	
426	...... ; assignment_expression ) { selection_statement	if ( ID > number ......	reduce(selection_statement->if ( expression ) statement else statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I36	r66	I36	
427	...... ; assignment_expression ) { statement	if ( ID > number ......	reduce(statement->selection_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40	r56	I40	
428	...... assignment_expression ) { statement if	( ID > number ) ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23	s23		
429	...... ) { statement if (	ID > number ) break ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53	s53		
430	...... { statement if ( ID	> number ) break ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I81	s81		
431	...... { statement if ( primary_expression	> number ) break ; ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I87	r4	I87	
432	...... statement if ( primary_expression >	number ) break ; else ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I87 I90	s90		
433	...... statement if ( primary_expression operator	number ) break ; else ......	reduce(operator->> ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I87 I127	r13	I127	
434	...... if ( primary_expression operator number	) break ; else ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I87 I127 I88	s88		
435	...... if ( primary_expression operator primary_expression	) break ; else ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I87 I127 I153	r5	I153	
436	...... ( primary_expression operator primary_expression arithmetic_expression	) break ; else ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I87 I127 I153 I185	r17	I185	
437	...... statement if ( primary_expression arithmetic_expression	) break ; else ID ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I87 I126	r16	I126	
438	...... { statement if ( constant_expression	) break ; else ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I82	r18	I82	
439	...... { statement if ( expression	) break ; else ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102	r31	I102	
440	...... statement if ( expression )	break ; else ID = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130	s130		
441	...... if ( expression ) break	; else ID = number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I158	s158		
442	...... ( expression ) break ;	else ID = number + ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I158 I188	s188		
443	...... if ( expression ) jump_statement	else ID = number + ......	reduce(jump_statement->break ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I169	r64	I169	
444	...... if ( expression ) statement	else ID = number + ......	reduce(statement->jump_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166	r55	I166	
445	...... ( expression ) statement else	ID = number + number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193	s193		
446	...... expression ) statement else ID	= number + number , ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34	s34		
447	...... ) statement else ID =	number + number , ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I66	s66		
448	...... ) statement else ID assignment_operator	number + number , ID ......	reduce(assignment_operator->= ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I63	r19	I63	
449	...... statement else ID assignment_operator number	+ number , ID = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I63 I49	s49		
450	...... statement else ID assignment_operator primary_expression	+ number , ID = ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I63 I47	r5	I47	
451	...... else ID assignment_operator primary_expression +	number , ID = number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I63 I47 I93	s93		
452	...... else ID assignment_operator primary_expression operator	number , ID = number ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I63 I47 I96	r7	I96	
453	...... ID assignment_operator primary_expression operator number	, ID = number * ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I63 I47 I96 I49	s49		
454	...... ID assignment_operator primary_expression operator primary_expression	, ID = number * ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I63 I47 I96 I128	r5	I128	
455	...... assignment_operator primary_expression operator primary_expression arithmetic_expression	, ID = number * ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I63 I47 I96 I128 I154	r17	I154	
456	...... else ID assignment_operator primary_expression arithmetic_expression	, ID = number * ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I63 I47 I89	r16	I89	
457	...... statement else ID assignment_operator constant_expression	, ID = number * ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I63 I43	r18	I43	
458	...... statement else ID assignment_operator expression	, ID = number * ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I34 I63 I110	r31	I110	
459	...... expression ) statement else assignment_expression	, ID = number * ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38	r25	I38	
460	...... ) statement else assignment_expression ,	ID = number * number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69	s69		
461	...... statement else assignment_expression , ID	= number * number , ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34	s34		
462	...... else assignment_expression , ID =	number * number , ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I66	s66		
463	...... else assignment_expression , ID assignment_operator	number * number , ID ......	reduce(assignment_operator->= ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I63	r19	I63	
464	...... assignment_expression , ID assignment_operator number	* number , ID + ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I63 I49	s49		
465	...... assignment_expression , ID assignment_operator primary_expression	* number , ID + ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I63 I47	r5	I47	
466	...... , ID assignment_operator primary_expression *	number , ID + = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I63 I47 I99	s99		
467	...... , ID assignment_operator primary_expression operator	number , ID + = ......	reduce(operator->* ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I63 I47 I96	r9	I96	
468	...... ID assignment_operator primary_expression operator number	, ID + = ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I63 I47 I96 I49	s49		
469	...... ID assignment_operator primary_expression operator primary_expression	, ID + = ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I63 I47 I96 I128	r5	I128	
470	...... assignment_operator primary_expression operator primary_expression arithmetic_expression	, ID + = ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I63 I47 I96 I128 I154	r17	I154	
471	...... , ID assignment_operator primary_expression arithmetic_expression	, ID + = ID ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I63 I47 I89	r16	I89	
472	...... assignment_expression , ID assignment_operator constant_expression	, ID + = ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I63 I43	r18	I43	
473	...... assignment_expression , ID assignment_operator expression	, ID + = ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I34 I63 I110	r31	I110	
474	...... statement else assignment_expression , assignment_expression	, ID + = ID ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113	r25	I113	
475	...... else assignment_expression , assignment_expression ,	ID + = ID ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69	s69		
476	...... assignment_expression , assignment_expression , ID	+ = ID ; } ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69 I34	s34		
477	...... , assignment_expression , ID +	= ID ; } int ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69 I34 I64	s64		
478	...... assignment_expression , ID + =	ID ; } int ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69 I34 I64 I111	s111		
479	...... , assignment_expression , ID assignment_operator	ID ; } int ID ......	reduce(assignment_operator->+ = ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69 I34 I63	r20	I63	
480	...... assignment_expression , ID assignment_operator ID	; } int ID = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69 I34 I63 I42	s42		
481	...... assignment_expression , ID assignment_operator primary_expression	; } int ID = ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69 I34 I63 I47	r4	I47	
482	...... , ID assignment_operator primary_expression arithmetic_expression	; } int ID = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69 I34 I63 I47 I89	r17	I89	
483	...... assignment_expression , ID assignment_operator constant_expression	; } int ID = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69 I34 I63 I43	r18	I43	
484	...... assignment_expression , ID assignment_operator expression	; } int ID = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69 I34 I63 I110	r31	I110	
485	...... assignment_expression , assignment_expression , assignment_expression	; } int ID = ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69 I113	r25	I113	
486	...... , assignment_expression , assignment_expression assignment_expression_profix	; } int ID = ......	reduce(assignment_expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I69 I113 I134	r27	I134	
487	...... else assignment_expression , assignment_expression assignment_expression_profix	; } int ID = ......	reduce(assignment_expression_profix->, assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I69 I113 I134	r26	I134	
488	...... ) statement else assignment_expression assignment_expression_profix	; } int ID = ......	reduce(assignment_expression_profix->, assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I38 I68	r26	I68	
489	...... expression ) statement else assignment_expression_list	; } int ID = ......	reduce(assignment_expression_list->assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I26	r28	I26	
490	...... ) statement else assignment_expression_list ;	} int ID = function ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I26 I55	s55		
491	...... expression ) statement else expression_statement	} int ID = function ......	reduce(expression_statement->assignment_expression_list ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I24	r62	I24	
492	...... expression ) statement else statement	} int ID = function ......	reduce(statement->expression_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I23 I53 I102 I130 I166 I193 I210	r54	I210	
493	...... assignment_expression ) { statement selection_statement	} int ID = function ......	reduce(selection_statement->if ( expression ) statement else statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I36	r66	I36	
494	...... assignment_expression ) { statement statement	} int ID = function ......	reduce(statement->selection_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I40	r56	I40	
495	...... ) { statement statement statement_list	} int ID = function ......	reduce(statement_list->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I40 I78	r61	I78	
496	...... assignment_expression ) { statement statement_list	} int ID = function ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I40 I78	r60	I78	
497	...... ; assignment_expression ) { statement_list	} int ID = function ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I56	r60	I56	
498	...... assignment_expression ) { statement_list }	int ID = function ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I28 I56 I103	s103		
499	...... expression ; assignment_expression ) compound_statement	int ID = function ID ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I31	r69	I31	
500	...... expression ; assignment_expression ) statement	int ID = function ID ......	reduce(statement->compound_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I33 I59 I106 I133 I173 I197 I213 I222	r58	I222	
501	...... statement statement statement statement iteration_statement	int ID = function ID ......	reduce(iteration_statement->for ( declaration expression ; assignment_expression ) statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I27	r68	I27	
502	...... statement statement statement statement statement	int ID = function ID ......	reduce(statement->iteration_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40	r57	I40	
503	...... statement statement statement statement int	ID = function ID ( ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I8	s8		
504	...... statement statement statement statement type_specifier	ID = function ID ( ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22	r39	I22	
505	...... statement statement statement type_specifier ID	= function ID ( ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13	s13		
506	...... statement statement type_specifier ID =	function ID ( ID , ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18	s18		
507	...... statement type_specifier ID = function	ID ( ID , ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45	s45		
508	...... type_specifier ID = function ID	( ID , ID ) ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80	s80		
509	...... ID = function ID (	ID , ID ) ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122	s122		
510	...... = function ID ( ID	, ID ) ; int ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I142	s142		
511	...... = function ID ( primary_expression	, ID ) ; int ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I148	r4	I148	
512	...... function ID ( primary_expression arithmetic_expression	, ID ) ; int ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I148 I180	r17	I180	
513	...... = function ID ( constant_expression	, ID ) ; int ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I143	r18	I143	
514	...... = function ID ( expression	, ID ) ; int ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I150	r31	I150	
515	...... function ID ( expression ,	ID ) ; int ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I150 I183	s183		
516	...... ID ( expression , ID	) ; int ID = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I150 I183 I142	s142		
517	...... ID ( expression , primary_expression	) ; int ID = ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I150 I183 I148	r4	I148	
518	...... ( expression , primary_expression arithmetic_expression	) ; int ID = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I150 I183 I148 I180	r17	I180	
519	...... ID ( expression , constant_expression	) ; int ID = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I150 I183 I143	r18	I143	
520	...... ID ( expression , expression	) ; int ID = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I150 I183 I204	r31	I204	
521	...... ( expression , expression expression_profix	) ; int ID = ......	reduce(expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I150 I183 I204 I217	r34	I217	
522	...... function ID ( expression expression_profix	) ; int ID = ......	reduce(expression_profix->, expression expression_profix ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I150 I182	r33	I182	
523	...... = function ID ( expression_list	) ; int ID = ......	reduce(expression_list->expression expression_profix ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I145	r35	I145	
524	...... function ID ( expression_list )	; int ID = number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I45 I80 I122 I145 I178	s178		
525	...... statement type_specifier ID = function_expression	; int ID = number ......	reduce(function_expression->function ID ( expression_list ) ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I44	r30	I44	
526	...... statement type_specifier ID = expression	; int ID = number ......	reduce(expression->function_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I18 I48	r32	I48	
527	...... statement statement type_specifier ID declaration_assign	; int ID = number ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I13 I19	r41	I19	
528	...... statement statement statement type_specifier declaration_init	; int ID = number ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I52	r43	I52	
529	...... statement statement type_specifier declaration_init declaration_init_list	; int ID = number ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I52 I101	r45	I101	
530	...... statement type_specifier declaration_init declaration_init_list ;	int ID = number * ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I22 I52 I101 I129	s129		
531	...... statement statement statement statement declaration	int ID = number * ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I32	r46	I32	
532	...... statement statement statement statement statement	int ID = number * ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40	r59	I40	
533	...... statement statement statement statement int	ID = number * number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I8	s8		
534	...... statement statement statement statement type_specifier	ID = number * number ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22	r39	I22	
535	...... statement statement statement type_specifier ID	= number * number + ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13	s13		
536	...... statement statement type_specifier ID =	number * number + number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18	s18		
537	...... statement type_specifier ID = number	* number + number / ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I49	s49		
538	...... statement type_specifier ID = primary_expression	* number + number / ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47	r5	I47	
539	...... type_specifier ID = primary_expression *	number + number / ( ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I99	s99		
540	...... type_specifier ID = primary_expression operator	number + number / ( ......	reduce(operator->* ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96	r9	I96	
541	...... ID = primary_expression operator number	+ number / ( number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I49	s49		
542	...... ID = primary_expression operator primary_expression	+ number / ( number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128	r5	I128	
543	...... = primary_expression operator primary_expression +	number / ( number * ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I93	s93		
544	...... = primary_expression operator primary_expression operator	number / ( number * ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96	r7	I96	
545	...... primary_expression operator primary_expression operator number	/ ( number * number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I49	s49		
546	...... primary_expression operator primary_expression operator primary_expression	/ ( number * number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128	r5	I128	
547	...... operator primary_expression operator primary_expression /	( number * number ) ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I95	s95		
548	...... operator primary_expression operator primary_expression operator	( number * number ) ......	reduce(operator->/ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96	r10	I96	
549	...... primary_expression operator primary_expression operator (	number * number ) - ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46	s46		
550	...... operator primary_expression operator ( number	* number ) - number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46 I88	s88		
551	...... operator primary_expression operator ( primary_expression	* number ) - number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46 I87	r5	I87	
552	...... primary_expression operator ( primary_expression *	number ) - number + ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46 I87 I99	s99		
553	...... primary_expression operator ( primary_expression operator	number ) - number + ......	reduce(operator->* ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46 I87 I127	r9	I127	
554	...... operator ( primary_expression operator number	) - number + ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46 I87 I127 I88	s88		
555	...... operator ( primary_expression operator primary_expression	) - number + ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46 I87 I127 I153	r5	I153	
556	...... ( primary_expression operator primary_expression arithmetic_expression	) - number + ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46 I87 I127 I153 I185	r17	I185	
557	...... primary_expression operator ( primary_expression arithmetic_expression	) - number + ID ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46 I87 I126	r16	I126	
558	...... operator primary_expression operator ( constant_expression	) - number + ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46 I82	r18	I82	
559	...... operator primary_expression operator ( expression	) - number + ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46 I83	r31	I83	
560	...... primary_expression operator ( expression )	- number + ID - ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I46 I83 I123	s123		
561	...... primary_expression operator primary_expression operator primary_expression	- number + ID - ......	reduce(primary_expression->( expression ) ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128	r6	I128	
562	...... operator primary_expression operator primary_expression -	number + ID - ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I91	s91		
563	...... operator primary_expression operator primary_expression operator	number + ID - ID ......	reduce(operator->- ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96	r8	I96	
564	...... primary_expression operator primary_expression operator number	+ ID - ID + ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I49	s49		
565	...... primary_expression operator primary_expression operator primary_expression	+ ID - ID + ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128	r5	I128	
566	...... operator primary_expression operator primary_expression +	ID - ID + ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I93	s93		
567	...... operator primary_expression operator primary_expression operator	ID - ID + ID ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96	r7	I96	
568	...... primary_expression operator primary_expression operator ID	- ID + ID ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I42	s42		
569	...... primary_expression operator primary_expression operator primary_expression	- ID + ID ; ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128	r4	I128	
570	...... operator primary_expression operator primary_expression -	ID + ID ; while ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I91	s91		
571	...... operator primary_expression operator primary_expression operator	ID + ID ; while ......	reduce(operator->- ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96	r8	I96	
572	...... primary_expression operator primary_expression operator ID	+ ID ; while ( ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96 I42	s42		
573	...... primary_expression operator primary_expression operator primary_expression	+ ID ; while ( ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128	r4	I128	
574	...... operator primary_expression operator primary_expression +	ID ; while ( ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I93	s93		
575	...... operator primary_expression operator primary_expression operator	ID ; while ( ID ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96	r7	I96	
576	...... primary_expression operator primary_expression operator ID	; while ( ID < ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96 I42	s42		
577	...... primary_expression operator primary_expression operator primary_expression	; while ( ID < ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128	r4	I128	
578	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I154	r17	I154	
579	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I154	r16	I154	
580	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I96 I128 I154	r16	I154	
581	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I96 I128 I154	r16	I154	
582	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I96 I128 I154	r16	I154	
583	...... operator primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I154	r16	I154	
584	...... = primary_expression operator primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I154	r16	I154	
585	...... type_specifier ID = primary_expression arithmetic_expression	; while ( ID < ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I89	r16	I89	
586	...... statement type_specifier ID = constant_expression	; while ( ID < ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I43	r18	I43	
587	...... statement type_specifier ID = expression	; while ( ID < ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I18 I48	r31	I48	
588	...... statement statement type_specifier ID declaration_assign	; while ( ID < ......	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I13 I19	r41	I19	
589	...... statement statement statement type_specifier declaration_init	; while ( ID < ......	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I52	r43	I52	
590	...... statement statement type_specifier declaration_init declaration_init_list	; while ( ID < ......	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I52 I101	r45	I101	
591	...... statement type_specifier declaration_init declaration_init_list ;	while ( ID < number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I22 I52 I101 I129	s129		
592	...... statement statement statement statement declaration	while ( ID < number ......	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I32	r46	I32	
593	...... statement statement statement statement statement	while ( ID < number ......	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40	r59	I40	
594	...... statement statement statement statement while	( ID < number ) ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29	s29		
595	...... statement statement statement while (	ID < number ) { ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57	s57		
596	...... statement statement while ( ID	< number ) { ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I81	s81		
597	...... statement statement while ( primary_expression	< number ) { ID ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I87	r4	I87	
598	...... statement while ( primary_expression <	number ) { ID + ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I87 I98	s98		
599	...... statement while ( primary_expression operator	number ) { ID + ......	reduce(operator->< ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I87 I127	r12	I127	
600	...... while ( primary_expression operator number	) { ID + = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I87 I127 I88	s88		
601	...... while ( primary_expression operator primary_expression	) { ID + = ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I87 I127 I153	r5	I153	
602	...... ( primary_expression operator primary_expression arithmetic_expression	) { ID + = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I87 I127 I153 I185	r17	I185	
603	...... statement while ( primary_expression arithmetic_expression	) { ID + = ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I87 I126	r16	I126	
604	...... statement statement while ( constant_expression	) { ID + = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I82	r18	I82	
605	...... statement statement while ( expression	) { ID + = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104	r31	I104	
606	...... statement while ( expression )	{ ID + = ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131	s131		
607	...... while ( expression ) {	ID + = ID ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28	s28		
608	...... ( expression ) { ID	+ = ID ; } ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I34	s34		
609	...... expression ) { ID +	= ID ; } int ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I34 I64	s64		
610	...... ) { ID + =	ID ; } int ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I34 I64 I111	s111		
611	...... expression ) { ID assignment_operator	ID ; } int ID ......	reduce(assignment_operator->+ = ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I34 I63	r20	I63	
612	...... ) { ID assignment_operator ID	; } int ID = ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I34 I63 I42	s42		
613	...... ) { ID assignment_operator primary_expression	; } int ID = ......	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I34 I63 I47	r4	I47	
614	...... { ID assignment_operator primary_expression arithmetic_expression	; } int ID = ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I34 I63 I47 I89	r17	I89	
615	...... ) { ID assignment_operator constant_expression	; } int ID = ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I34 I63 I43	r18	I43	
616	...... ) { ID assignment_operator expression	; } int ID = ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I34 I63 I110	r31	I110	
617	...... ( expression ) { assignment_expression	; } int ID = ......	reduce(assignment_expression->ID assignment_operator expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I38	r25	I38	
618	...... expression ) { assignment_expression assignment_expression_profix	; } int ID = ......	reduce(assignment_expression_profix->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I38 I68	r27	I68	
619	...... ( expression ) { assignment_expression_list	; } int ID = ......	reduce(assignment_expression_list->assignment_expression assignment_expression_profix ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I26	r28	I26	
620	...... expression ) { assignment_expression_list ;	} int ID = ( ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I26 I55	s55		
621	...... ( expression ) { expression_statement	} int ID = ( ......	reduce(expression_statement->assignment_expression_list ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I24	r62	I24	
622	...... ( expression ) { statement	} int ID = ( ......	reduce(statement->expression_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I40	r54	I40	
623	...... expression ) { statement statement_list	} int ID = ( ......	reduce(statement_list->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I40 I78	r61	I78	
624	...... ( expression ) { statement_list	} int ID = ( ......	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I56	r60	I56	
625	...... expression ) { statement_list }	int ID = ( ( ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I28 I56 I103	s103		
626	...... while ( expression ) compound_statement	int ID = ( ( ......	reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I31	r69	I31	
627	...... while ( expression ) statement	int ID = ( ( ......	reduce(statement->compound_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I29 I57 I104 I131 I171	r58	I171	
628	...... statement statement statement statement iteration_statement	int ID = ( ( ......	reduce(iteration_statement->while ( expression ) statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I27	r67	I27	
629	...... statement statement statement statement statement	int ID = ( ( ......	reduce(statement->iteration_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40	r57	I40	
630	...... statement statement statement statement int	ID = ( ( number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I8	s8		
631	...... statement statement statement statement type_specifier	ID = ( ( number ......	reduce(type_specifier->int ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22	r39	I22	
632	...... statement statement statement type_specifier ID	= ( ( number - ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13	s13		
633	...... statement statement type_specifier ID =	( ( number - number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18	s18		
634	...... statement type_specifier ID = (	( number - number ) ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46	s46		
635	...... type_specifier ID = ( (	number - number ) + ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86	s86		
636	...... ID = ( ( number	- number ) + number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86 I88	s88		
637	...... ID = ( ( primary_expression	- number ) + number ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86 I87	r5	I87	
638	...... = ( ( primary_expression -	number ) + number ) ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86 I87 I91	s91		
639	...... = ( ( primary_expression operator	number ) + number ) ......	reduce(operator->- ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86 I87 I127	r8	I127	
640	...... ( ( primary_expression operator number	) + number ) * ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86 I87 I127 I88	s88		
641	...... ( ( primary_expression operator primary_expression	) + number ) * ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86 I87 I127 I153	r5	I153	
642	...... ( primary_expression operator primary_expression arithmetic_expression	) + number ) * ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86 I87 I127 I153 I185	r17	I185	
643	...... = ( ( primary_expression arithmetic_expression	) + number ) * ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86 I87 I126	r16	I126	
644	...... ID = ( ( constant_expression	) + number ) * ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86 I82	r18	I82	
645	...... ID = ( ( expression	) + number ) * ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86 I125	r31	I125	
646	...... = ( ( expression )	+ number ) * number ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I86 I125 I152	s152		
647	...... type_specifier ID = ( primary_expression	+ number ) * number ......	reduce(primary_expression->( expression ) ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I87	r6	I87	
648	...... ID = ( primary_expression +	number ) * number + ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I87 I93	s93		
649	...... ID = ( primary_expression operator	number ) * number + ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I87 I127	r7	I127	
650	...... = ( primary_expression operator number	) * number + ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I87 I127 I88	s88		
651	...... = ( primary_expression operator primary_expression	) * number + ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I87 I127 I153	r5	I153	
652	...... ( primary_expression operator primary_expression arithmetic_expression	) * number + ID ......	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I87 I127 I153 I185	r17	I185	
653	...... ID = ( primary_expression arithmetic_expression	) * number + ID ......	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I87 I126	r16	I126	
654	...... type_specifier ID = ( constant_expression	) * number + ID ......	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I82	r18	I82	
655	...... type_specifier ID = ( expression	) * number + ID ......	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I83	r31	I83	
656	...... ID = ( expression )	* number + ID ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I46 I83 I123	s123		
657	...... statement type_specifier ID = primary_expression	* number + ID ; ......	reduce(primary_expression->( expression ) ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47	r6	I47	
658	...... type_specifier ID = primary_expression *	number + ID ; return ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I99	s99		
659	...... type_specifier ID = primary_expression operator	number + ID ; return ......	reduce(operator->* ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96	r9	I96	
660	...... ID = primary_expression operator number	+ ID ; return ID ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I49	s49		
661	...... ID = primary_expression operator primary_expression	+ ID ; return ID ......	reduce(primary_expression->number ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128	r5	I128	
662	...... = primary_expression operator primary_expression +	ID ; return ID ; ......	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I93	s93		
663	...... = primary_expression operator primary_expression operator	ID ; return ID ; ......	reduce(operator->+ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96	r7	I96	
664	...... primary_expression operator primary_expression operator ID	; return ID ; }	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I42	s42		
665	...... primary_expression operator primary_expression operator primary_expression	; return ID ; }	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128	r4	I128	
666	...... operator primary_expression operator primary_expression arithmetic_expression	; return ID ; }	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I96 I128 I154	r17	I154	
667	...... = primary_expression operator primary_expression arithmetic_expression	; return ID ; }	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I96 I128 I154	r16	I154	
668	...... type_specifier ID = primary_expression arithmetic_expression	; return ID ; }	reduce(arithmetic_expression->operator primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I47 I89	r16	I89	
669	...... statement type_specifier ID = constant_expression	; return ID ; }	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I43	r18	I43	
670	...... statement type_specifier ID = expression	; return ID ; }	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I18 I48	r31	I48	
671	...... statement statement type_specifier ID declaration_assign	; return ID ; }	reduce(declaration_assign->= expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I13 I19	r41	I19	
672	...... statement statement statement type_specifier declaration_init	; return ID ; }	reduce(declaration_init->ID declaration_assign ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I52	r43	I52	
673	...... statement statement type_specifier declaration_init declaration_init_list	; return ID ; }	reduce(declaration_init_list->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I52 I101	r45	I101	
674	...... statement type_specifier declaration_init declaration_init_list ;	return ID ; }	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I22 I52 I101 I129	s129		
675	...... statement statement statement statement declaration	return ID ; }	reduce(declaration->type_specifier declaration_init declaration_init_list ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I32	r46	I32	
676	...... statement statement statement statement statement	return ID ; }	reduce(statement->declaration ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40	r59	I40	
677	...... statement statement statement statement return	ID ; }	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40 I39	s39		
678	...... statement statement statement return ID	; }	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40 I39 I70	s70		
679	...... statement statement statement return primary_expression	; }	reduce(primary_expression->ID ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40 I39 I76	r4	I76	
680	...... statement statement return primary_expression arithmetic_expression	; }	reduce(arithmetic_expression->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40 I39 I76 I117	r17	I117	
681	...... statement statement statement return constant_expression	; }	reduce(constant_expression->primary_expression arithmetic_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40 I39 I71	r18	I71	
682	...... statement statement statement return expression	; }	reduce(expression->constant_expression ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40 I39 I72	r31	I72	
683	...... statement statement return expression ;	}	shift	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40 I39 I72 I114	s114		
684	...... statement statement statement statement jump_statement	}	reduce(jump_statement->return expression ; ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40 I37	r65	I37	
685	...... statement statement statement statement statement	}	reduce(statement->jump_statement ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40 I40	r55	I40	
686	...... statement statement statement statement statement_list	}	reduce(statement_list->$ ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40 I40 I78	r61	I78	
687	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I40 I78	r60	I78	
688	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I40 I78	r60	I78	
689	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I40 I78	r60	I78	
690	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I40 I78	r60	I78	
691	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I40 I78	r60	I78	
692	...... statement statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I40 I78	r60	I78	
693	...... { statement statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I40 I78	r60	I78	
694	...... function_definition { statement statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I40 I78	r60	I78	
695	...... external_declaration function_definition { statement statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I40 I78	r60	I78	
696	...... external_declaration external_declaration function_definition { statement_list	}	reduce(statement_list->statement statement_list ,['#'])	I0 I2 I2 I2 I10 I15 I35	r60	I35	
697	...... external_declaration function_definition { statement_list }		shift	I0 I2 I2 I2 I10 I15 I35 I67	s67		
698	...... external_declaration external_declaration external_declaration function_definition compound_statement		reduce(compound_statement->{ statement_list } ,['#'])	I0 I2 I2 I2 I10 I16	r69	I16	
699	# external_declaration external_declaration external_declaration function_implement		reduce(function_implement->function_definition compound_statement ,['#'])	I0 I2 I2 I2 I3	r53	I3	
700	# external_declaration external_declaration external_declaration external_declaration		reduce(external_declaration->function_implement ,['#'])	I0 I2 I2 I2 I2	r70	I2	
701	...... external_declaration external_declaration external_declaration external_declaration start		reduce(start->$ ,['#'])	I0 I2 I2 I2 I2 I12	r3	I12	
702	# external_declaration external_declaration external_declaration start		reduce(start->external_declaration start ,['#'])	I0 I2 I2 I2 I12	r2	I12	
703	# external_declaration external_declaration start		reduce(start->external_declaration start ,['#'])	I0 I2 I2 I12	r2	I12	
704	# external_declaration start		reduce(start->external_declaration start ,['#'])	I0 I2 I12	r2	I12	
705	# start		reduce(start->external_declaration start ,['#'])	I0 I1	r2	I1	
706	# start		accept	I0 I1	acc		
